# example 6
# Cargar el dataset de mpg de Seaborn
df = sns.load_dataset('mpg')

# Aseg칰rate de que los datos no tengan valores nulos
df = df.dropna()


# Streamlit App Title
st.title("游늵 Dashboard de An치lisis de Autos")

# Crear un filtro en el sidebar para seleccionar el a침o del modelo (model_year)
selected_year = st.sidebar.slider("Selecciona un a침o de modelo:", int(df["model_year"].min()), int(df["model_year"].max()), int(df["model_year"].min()))

# Filtrar los datos seg칰n el a침o seleccionado
filtered_df = df[df["model_year"] == selected_year]

# Gr치fico 1: Relaci칩n entre el peso y las millas por gal칩n, coloreado por origen
fig1 = px.scatter(filtered_df, x="weight", y="mpg", color="origin", 
                  size="horsepower", title="Relaci칩n entre Peso y MPG (Color por Origen)")

# Gr치fico 2: Promedio de MPG por n칰mero de cilindros
# Seleccionar solo columnas num칠ricas antes de aplicar el promedio
fig2 = px.bar(df.groupby("cylinders").agg({"mpg": "mean"}).reset_index(), x="cylinders", y="mpg", 
              title="Promedio de MPG por N칰mero de Cilindros")

# Gr치fico 3: Evoluci칩n de la Potencia y Aceleraci칩n a lo largo de los a침os de modelo
# Seleccionar solo columnas num칠ricas antes de aplicar el promedio
fig3 = px.line(df.groupby("model_year").agg({"horsepower": "mean", "acceleration": "mean"}).reset_index(), 
               x="model_year", y=["horsepower", "acceleration"], 
               title="Evoluci칩n de Potencia y Aceleraci칩n por A침o de Modelo")

# Layout - Usando Tabs para mostrar los diferentes gr치ficos
tab1, tab2, tab3 = st.tabs(["游늷 Scatter Plot", "游늵 Bar Chart", "游늳 Line Chart"])

with tab1:
    st.plotly_chart(fig1, use_container_width=True)

with tab2:
    st.plotly_chart(fig2, use_container_width=True)

with tab3:
    st.plotly_chart(fig3, use_container_width=True)
